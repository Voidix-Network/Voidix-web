# 加载 Brotli 模块
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

worker_processes auto;
error_log /var/log/nginx/error.log warn;

# 🔥 TTFB核心优化 - Worker进程优化
worker_priority -10;                # 🔥 提高worker进程优先级
worker_rlimit_nofile 65535;         # 🔥 增加文件描述符限制
worker_cpu_affinity auto;           # 🔥 自动CPU亲和性绑定
worker_shutdown_timeout 30s;        # 🔥 优雅关闭超时

events {
    worker_connections 16384;       # 🚀 进一步提升连接数 (8192 -> 16384)
    use epoll;                      # Linux高效事件模型
    multi_accept on;                # 一次接受多个连接
    accept_mutex off;               # 🚀 关闭接受锁，提高并发
    worker_aio_requests 512;        # 🚀 异步IO请求数量

    # 🔥 TTFB关键优化
    epoll_events 1024;              # 🔥 增加epoll事件数量
}

http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 🚀 极致高性能网络传输优化 - 跑满宽带核心配置
    sendfile on;
    sendfile_max_chunk 2m;          # 🚀 单次sendfile最大块大小
    tcp_nopush on;                  # 🔥 批量发送，减少网络开销
    tcp_nodelay on;                 # 🔥 小数据包立即发送
    keepalive_timeout 120s;         # 🚀 保持长连接 (75s -> 120s)
    keepalive_requests 10000;       # 🚀 极致连接复用 (1000 -> 10000)
    keepalive_disable none;         # 🔥 不禁用任何keep-alive
    types_hash_max_size 8192;       # 🚀 哈希表大小 (4096 -> 8192)
    server_tokens off;

    # 🚀 关键：文件传输缓冲区大幅优化
    output_buffers 2 512k;          # 🔥 输出缓冲区优化
    postpone_output 0;              # 🔥 不延迟输出，立即响应

    # 🚀 关键：打开文件缓存大幅优化
    open_file_cache max=50000 inactive=300s;  # 🚀 更大缓存 (20000 -> 50000)
    open_file_cache_valid 300s;         # 🚀 延长有效期 (60s -> 300s)
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # 🚀 客户端缓冲区超级优化 - 跑满宽带关键
    client_max_body_size 128m;      # 🚀 提升上传限制 (64m -> 128m)
    client_body_buffer_size 2m;     # 🚀 提升客户端缓冲区 (1m -> 2m)
    client_header_buffer_size 32k;  # 🔥 增加头部缓冲区 (1k -> 32k)
    large_client_header_buffers 8 128k; # 🔥 大头部缓冲区优化

    # 🚀 新增：客户端超时优化
    client_body_timeout 15s;        # 🔥 减少主体超时 (60s -> 15s)
    client_header_timeout 15s;      # 🔥 减少头部超时 (60s -> 15s)
    send_timeout 10s;               # 🔥 减少发送超时 (60s -> 10s)

    # 🚀 关键：代理缓冲区极致优化
    proxy_buffering on;
    proxy_buffer_size 32k;          # 🚀 代理缓冲区大小 (16k -> 32k)
    proxy_buffers 64 32k;           # 🚀 代理缓冲区数量 (32 16k -> 64 32k)
    proxy_busy_buffers_size 128k;   # 🚀 繁忙缓冲区大小 (64k -> 128k)
    proxy_temp_file_write_size 128k; # 🚀 临时文件写入大小

    # 🚀 新增：代理连接优化
    proxy_connect_timeout 10s;      # 🚀 代理连接超时
    proxy_send_timeout 30s;         # 🚀 代理发送超时
    proxy_read_timeout 60s;         # 🚀 代理读取超时

    # 🚀 新增：连接复用和TCP优化
    reset_timedout_connection on;   # 🚀 重置超时连接

    # 🔥 新增：请求体处理优化
    client_body_temp_path /var/cache/nginx/client_temp;

    # 🚀 新增：内存映射优化
    directio 16m;                   # 🚀 大文件直接IO阈值
    directio_alignment 4k;          # 🚀 直接IO对齐

    # 🔥 新增：错误处理优化
    lingering_close on;             # 🔥 优雅关闭连接
    lingering_time 5s;              # 🔥 等待客户端关闭时间
    lingering_timeout 2s;           # 🔥 等待超时时间

    # ========================================================================
    # CDN 代理缓存配置
    # ========================================================================

    # 代理缓存路径配置
    proxy_cache_path /var/cache/nginx/voidix
        levels=1:2
        keys_zone=voidix_cache:50m    # 🚀 增大缓存区域 (10m -> 50m)
        inactive=180m                 # 🚀 延长非活跃时间 (60m -> 180m)
        max_size=5g                   # 🚀 增大最大缓存 (1g -> 5g)
        use_temp_path=off;            # 🚀 禁用临时路径提升性能

    proxy_temp_path /var/cache/nginx/voidix_temp;

    # 🚀 新增：额外缓存区域配置
    proxy_cache_path /var/cache/nginx/static
        levels=1:2
        keys_zone=static_cache:100m
        inactive=1440m
        max_size=10g
        use_temp_path=off;

    # ========================================================================
    # 🚀 性能监控日志格式 - 便于性能分析
    # ========================================================================

    log_format main_perf '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for" '
                         'rt=$request_time uct="$upstream_connect_time" '
                         'uht="$upstream_header_time" urt="$upstream_response_time" '
                         'cs=$upstream_cache_status';  # 🚀 添加缓存状态

    # ========================================================================
    # 速率限制配置优化
    # ========================================================================

    # CDN API 请求限制 - 更宽松
    limit_req_zone $binary_remote_addr zone=cdn_api:20m rate=60r/m;  # 🚀 提升限制 (10m 30r/m -> 20m 60r/m)

    # CDN 资源请求限制 - 更宽松
    limit_req_zone $binary_remote_addr zone=cdn_assets:30m rate=120r/m; # 🚀 提升限制 (10m 60r/m -> 30m 120r/m)

    # 🚀 新增：静态资源专用限制
    limit_req_zone $binary_remote_addr zone=static_files:20m rate=200r/m;

    # ========================================================================
    # 引入站点配置
    # ========================================================================
    include /etc/nginx/sites-enabled/*;
}
