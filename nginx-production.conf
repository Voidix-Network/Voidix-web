# Voidix网站生产环境Nginx配置
# 基于现代React+TypeScript+Vite架构优化
#
# 🔒 SSL/TLS双证书配置说明：
# - ECC证书：现代浏览器优先，性能最佳，体积最小
# - RSA证书：传统浏览器兼容，向后兼容性最好
#
# 🚀 当前算法优先级：ECC > RSA
# 🔥 A+评级SSL配置：前向保密优先、TLS 1.3、HSTS 2年期限

# ============================================================================
# 🔒 HSTS安全支持 - HTTP强制重定向到HTTPS
# ============================================================================

# 🎯 HSTS Preload专用配置：根域名HTTP重定向
server {
    listen 80;
    listen [::]:80;
    server_name voidix.net;

    # 🚀 HSTS Preload要求：根域名先重定向到自己的HTTPS
    return 301 https://voidix.net$request_uri;
}

# www子域名HTTP重定向
server {
    listen 80;
    listen [::]:80;
    server_name www.voidix.net;

    # 🚀 www子域名直接重定向到www的HTTPS
    return 301 https://www.voidix.net$request_uri;
}

# CDN HTTP重定向
server {
    listen 80;
    listen [::]:80;
    server_name cdn.voidix.net;

    # 🚀 CDN重定向到HTTPS
    return 301 https://cdn.voidix.net$request_uri;
}

# 🔒 通配符子域名HTTPS重定向支持
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # 🚀 所有其他子域名重定向到主站HTTPS
    return 301 https://www.voidix.net$request_uri;
}

# ============================================================================
# CDN代理配置说明
# ============================================================================
# 本配置包含CDN代理功能，需要在主nginx.conf的http块中添加以下配置：
# proxy_cache_path /var/cache/nginx/voidix levels=1:2 keys_zone=voidix_cache:50m inactive=180m max_size=5g;
# proxy_temp_path /var/cache/nginx/voidix_temp;
#
# 以及Rate Limiting配置：
# limit_req_zone $binary_remote_addr zone=cdn_api:20m rate=60r/m;
# limit_req_zone $binary_remote_addr zone=cdn_assets:30m rate=120r/m;
# limit_req_zone $binary_remote_addr zone=static_files:20m rate=200r/m;
#
# 代理功能包括：
# - Minecraft头像API代理和缓存
# - UptimeRobot监控API代理和缓存
# - Google Fonts代理和缓存
# - 自动排除分析JS脚本（GA、字节跳动等）
# - SEO友好的CDN防盗链保护机制（允许搜索引擎爬虫）
# ============================================================================

# ============================================================================
# 主站HTTPS配置 - www.voidix.net
# ============================================================================
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name www.voidix.net;

    # 网站根目录
    root /var/www/voidix.net/dist;
    index index.html;

    # 性能及IO优化
    large_client_header_buffers 16 128k;
    keepalive_requests 50000;
    http2_max_concurrent_streams 256;
    http2_push_preload on;
    postpone_output 0;
    tcp_nopush off;
    tcp_nodelay on;
    sendfile on;
    sendfile_max_chunk 512k;
    aio threads;
    directio 4m;
    lingering_close off;
    lingering_time 1s;
    reset_timedout_connection on;

    # SSL双证书配置 - ECC优先，RSA兼容
    ssl_certificate /etc/nginx/ssl/voidix.net/ECC/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/ECC/voidix.key;
    ssl_certificate /etc/nginx/ssl/voidix.net/RSA/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/RSA/voidix.key;

    # SSL优化配置 (A+评级)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-SHA256:ECDHE-RSA-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA:!DHE';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:100m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;
    ssl_buffer_size 4k;
    ssl_early_data on;
    ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    ssl_conf_command Options PrioritizeChaCha;
    ssl_conf_command Options NoRenegotiation;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/voidix.net/ECC/voidix.cer;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    ssl_ecdh_curve X25519:X448:secp384r1:secp521r1:secp256r1;

    # ============================================================================
    # ✨ 全局安全与性能头部 (已整合)
    # 在server块中统一定义，避免在location中重复，简化维护
    # 'always'参数确保头部在所有响应码（包括错误页）中都生效
    # ============================================================================
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-DNS-Prefetch-Control "on" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://lf1-cdn-tos.bytegoofy.com https://b.clarity.ms https://k.clarity.ms https://*.clarity.ms; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.voidix.net; font-src 'self' https://fonts.gstatic.com https://cdn.voidix.net; img-src 'self' data: https: blob: https://cdn.voidix.net; connect-src 'self' https://www.google-analytics.com https://api.uptimerobot.com https://cdn.voidix.net wss://$host wss://server.voidix.top:10203 https://b.clarity.ms https://k.clarity.ms https://*.clarity.ms; object-src 'none'; base-uri 'self'; form-action 'self';" always;


    # 预压缩文件配置（零CPU消耗）
    brotli_static on;
    brotli off;
    brotli_min_length 128;
    brotli_types text/plain text/css text/xml text/javascript text/json application/javascript application/json application/xml application/xml+rss application/atom+xml application/rss+xml image/svg+xml font/woff font/woff2 font/ttf font/eot font/otf;

    gzip_static on;
    gzip off;
    gzip_vary on;
    gzip_min_length 128;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/atom+xml image/svg+xml font/woff font/woff2;

    # SEO优化：将 /page.html 重定向到 /page
    location ~ ^/(?!index)(.+)\.html$ {
        return 301 /$1;
    }

    # 静态资源：CSS/JS
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        read_ahead 512k;
        open_file_cache_valid 3600s;
        try_files $uri =404;
    }

    # 静态资源：字体
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        add_header Link "<$uri>; rel=preload; as=font; crossorigin" always;
        expires 2y;
        add_header Cache-Control "public, immutable, max-age=63072000";
        add_header Access-Control-Allow-Origin "*";
        try_files $uri =404;
    }

    # 静态资源：图片
    location ~* \.(png|jpg|jpeg|gif|webp|svg|ico)$ {
        expires 6M;
        add_header Cache-Control "public, immutable, max-age=15552000";
        add_header Vary "Accept";
        try_files $uri =404;
    }

    # 静态资源：其他 (map, txt, xml) - 不缓存
    location ~* \.(map|txt|xml)$ {
        try_files $uri =404;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }

    # PWA图标和Logo文件专用配置
    location ~* ^/(android-chrome-|apple-touch-icon|favicon\.|logo\.) {
        try_files $uri =404;
        expires 90d;
        add_header Cache-Control "public, immutable, max-age=7776000";
        etag on;
        add_header Link "<$uri>; rel=preload; as=image";
        access_log /var/log/nginx/voidix_icons.log;
    }

    # 主路由配置 - SPA应用路由
    location / {
        # 🚀 资源预加载和预连接
        add_header Link "</cdn.voidix.net>; rel=dns-prefetch" always;
        add_header Link "</fonts.googleapis.com>; rel=dns-prefetch" always;
        add_header Link "</api.uptimerobot.com>; rel=dns-prefetch" always;
        add_header Link "</cdn.voidix.net>; rel=preconnect" always;
        add_header Link "</fonts.gstatic.com>; rel=preconnect; crossorigin" always;

        # 🚀 HTML文件不缓存，确保用户始终获得最新版本
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";

        # ✨ FIX: 修正的SPA路由处理方式
        # 如果找不到静态文件，直接返回404。Nginx会根据error_page指令处理后续逻辑。
        try_files $uri $uri/ =404;
    }

    # 预渲染页面 (SEO优化)
    location /status {
        try_files /status/index.html /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }
    location /faq {
        try_files /faq/index.html /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }
    location /bug-report {
        try_files /bug-report/index.html /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }
    location /privacy {
        try_files /privacy/index.html /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }

    # API代理
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # ✨ OPTIMIZATION: 使用与注释一致的缓存区
        proxy_cache voidix_cache;
        proxy_cache_key "$request_uri";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout invalid_header updating;

        proxy_connect_timeout 3s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }

    # WebSocket代理
    location /ws {
        proxy_pass http://localhost:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin "";
        proxy_read_timeout 3600s; # 1小时长连接
        proxy_buffering off;
    }

    # SEO文件 (robots.txt, sitemap.xml)
    location = /robots.txt {
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }
    location = /sitemap.xml {
        add_header Content-Type application/xml;
        add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    }

    # 健康检查端点
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 隐藏并禁止访问敏感文件
    location ~ /\. { deny all; }
    location ~ \.(md|json|lock|log)$ { deny all; }

    # ✨ FIX: 统一的错误页面处理
    # 404错误会内部重定向到/index.html，并保留404状态码，交由前端路由处理
    # 5xx服务器错误也显示主页，避免暴露错误信息
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # 访问日志配置
    access_log /var/log/nginx/voidix_access.log main_perf;
    error_log /var/log/nginx/voidix_error.log;
}

# ============================================================================
# 根域名HTTPS配置 - voidix.net (已优化为轻量级重定向服务器)
# ============================================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name voidix.net;

    # SSL双证书配置 - 确保安全重定向
    ssl_certificate /etc/nginx/ssl/voidix.net/ECC/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/ECC/voidix.key;
    ssl_certificate /etc/nginx/ssl/voidix.net/RSA/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/RSA/voidix.key;

    # SSL基础安全配置 (保持A+评级)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-SHA256:ECDHE-RSA-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA:!DHE';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m; # 重定向服务器不需要大缓存
    ssl_session_timeout 1h;

    # HSTS是重定向服务器最重要的头部之一
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # 🚀 全局永久重定向到www主站
    return 301 https://www.voidix.net$request_uri;

    access_log /var/log/nginx/voidix_root_access.log main_perf;
    error_log /var/log/nginx/voidix_root_error.log;
}

# ============================================================================
# CDN子域名配置 - cdn.voidix.net 专用代理服务
# ============================================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.voidix.net;

    # 性能及IO优化
    large_client_header_buffers 16 128k;
    keepalive_requests 50000;
    http2_max_concurrent_streams 256;
    http2_push_preload on;
    postpone_output 0;
    tcp_nopush off;
    tcp_nodelay on;
    sendfile on;
    sendfile_max_chunk 512k;
    aio threads;
    directio 4m;

    # SSL双证书配置
    ssl_certificate /etc/nginx/ssl/voidix.net/ECC/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/ECC/voidix.key;
    ssl_certificate /etc/nginx/ssl/voidix.net/RSA/voidix.cer;
    ssl_certificate_key /etc/nginx/ssl/voidix.net/RSA/voidix.key;

    # SSL优化配置 (A+评级)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-SHA256:ECDHE-RSA-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA:!DHE';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:100m;
    ssl_session_timeout 24h;
    ssl_session_tickets off;
    ssl_buffer_size 4k;
    ssl_early_data on;
    ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
    ssl_conf_command Options PrioritizeChaCha;
    ssl_conf_command Options NoRenegotiation;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/voidix.net/ECC/voidix.cer;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    ssl_ecdh_curve X25519:X448:secp384r1:secp521r1:secp256r1;

    # 安全与服务标识头部
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-CDN-Provider "Voidix-CDN-v2.0" always;
    add_header X-Served-By "cdn.voidix.net" always;

    # CDN 实时压缩配置
    brotli on;
    brotli_comp_level 11;
    brotli_min_length 128;
    brotli_static on;
    brotli_types text/plain text/css text/xml text/javascript text/json application/javascript application/json application/xml application/xml+rss application/atom+xml application/rss+xml image/svg+xml font/woff font/woff2 font/ttf font/eot font/otf;

    gzip on;
    gzip_vary on;
    gzip_min_length 128;
    gzip_comp_level 9;
    gzip_static on;
    # ✨ OPTIMIZATION: 保持与Brotli的类型一致
    gzip_types text/plain text/css text/xml text/javascript text/json application/javascript application/json application/xml application/xml+rss application/atom+xml application/rss+xml image/svg+xml font/woff font/woff2 font/ttf font/eot font/otf;

    # Google Fonts CSS 代理
    location /fonts/css/ {
        limit_req zone=cdn_assets burst=20 nodelay;
        proxy_pass https://fonts.googleapis.com;
        proxy_cache voidix_cache;
        proxy_cache_key "fonts_css:$request_uri";
        proxy_cache_valid 200 14d;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status always;
        add_header Cache-Control "public, max-age=1209600, immutable";
        add_header Access-Control-Allow-Origin "*" always;
        proxy_set_header Host "fonts.googleapis.com";
        rewrite ^/fonts/css/(.*)$ /$1 break;
    }

    # Google Fonts 字体文件代理
    location /fonts/files/ {
        limit_req zone=cdn_assets burst=30 nodelay;
        proxy_pass https://fonts.gstatic.com;
        proxy_cache voidix_cache;
        proxy_cache_key "fonts_files:$request_uri";
        proxy_cache_valid 200 90d;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status always;
        add_header Cache-Control "public, max-age=7776000, immutable";
        add_header Access-Control-Allow-Origin "*" always;
        proxy_set_header Host "fonts.gstatic.com";
        rewrite ^/fonts/files/(.*)$ /$1 break;
    }

    # 安全策略 - 禁止代理分析脚本
    location ~* /(googletagmanager|google-analytics|lf1-cdn-tos\.bytegoofy) {
        return 403 "Analytics scripts are not allowed through this CDN.";
    }

    # CDN 健康检查
    location = /cdn-status {
        access_log off;
        return 200 '{"status":"healthy","service":"voidix-cdn","version":"2.0"}';
        add_header Content-Type "application/json";
        add_header Cache-Control "no-cache";
    }

    # 默认拒绝所有其他请求
    location / {
        return 404 "CDN Service: Resource not found.";
    }

    access_log /var/log/nginx/cdn_access.log main_perf;
    error_log /var/log/nginx/cdn_error.log;
}
