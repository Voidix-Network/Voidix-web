import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

/**
 * 构建配置模块
 * 统一管理所有构建相关的配置
 */

// 基础路径配置
export const BUILD_CONFIG = {
  // 项目根目录
  rootDir: path.resolve(__dirname, '..'),

  // 构建输出目录
  distDir: path.resolve(__dirname, '..', 'dist'),

  // 公共资源目录
  publicDir: path.resolve(__dirname, '..', 'public'),

  // 源代码目录
  srcDir: path.resolve(__dirname, '..', 'src'),
};

// 预渲染配置
export const PRERENDER_CONFIG = {
  // 服务器配置
  server: {
    port: 4173,
    host: 'localhost',
  },

  // 需要预渲染的路由
  routes: [
    { path: '/', outputDir: '' },
    { path: '/status', outputDir: 'status' },
    { path: '/faq', outputDir: 'faq' },
    { path: '/bug-report', outputDir: 'bug-report' },
    { path: '/privacy', outputDir: 'privacy' },
    { path: '/not-found', outputDir: 'not-found' },
  ],

  // 🔥 HTML终极压缩配置 - 极限优化
  htmlMinify: {
    // === 基础压缩 ===
    collapseWhitespace: true,        // ✅ 压缩空白符
    removeComments: true,            // ✅ 移除注释
    removeRedundantAttributes: true, // ✅ 移除冗余属性
    removeScriptTypeAttributes: true,// ✅ 移除script type
    removeStyleLinkTypeAttributes: true, // ✅ 移除style/link type
    useShortDoctype: true,           // ✅ 使用短DOCTYPE
    removeEmptyAttributes: true,     // ✅ 移除空属性
    html5: true,                     // ✅ HTML5模式
    caseSensitive: false,            // ✅ 大小写不敏感

    // === 🔥 极限压缩选项 ===
    removeOptionalTags: false,
    removeAttributeQuotes: false,
    removeEmptyElements: true,      // 🔥 移除空元素
    collapseBooleanAttributes: true, // 🔥 压缩布尔属性（checked而非checked="checked"）
    collapseInlineTagWhitespace: true, // 🔥 压缩内联标签空白
    conservativeCollapse: false,     // 🔥 激进空白压缩
    decodeEntities: true,            // 🔥 解码HTML实体
    includeAutoGeneratedTags: false, // 🔥 不包含自动生成标签
    keepClosingSlash: false,         // 🔥 移除自闭合标签的斜杠
    processConditionalComments: true, // 🔥 处理条件注释
    processScripts: ['text/html'],   // 🔥 处理脚本内容
    removeTagWhitespace: true,       // 🔥 移除标签间空白
    sortAttributes: true,            // 🔥 排序属性（减少gzip重复）
    sortClassName: true,             // 🔥 排序class名（减少gzip重复）
    trimCustomFragments: true,       // 🔥 修剪自定义片段

    // === CSS/JS 内联压缩 ===
    minifyCSS: {
      level: 2,                      // 🔥 CSS最高级别压缩
      compatibility: '*',            // 🔥 忽略兼容性警告
    },
    minifyJS: {
      compress: {
        drop_console: true,          // 🔥 移除console
        drop_debugger: true,         // 🔥 移除debugger
        pure_funcs: ['console.log'], // 🔥 纯函数优化
      },
      mangle: true,                  // 🔥 混淆变量名
      format: {
        comments: false,             // 🔥 移除所有注释
      },
    },

    // === 高级选项 ===
    ignoreCustomComments: [/^!/],   // 保留重要注释（如许可证）
    maxLineLength: 0,                // 🔥 无行长度限制（单行输出）
    preserveLineBreaks: false,       // 🔥 不保留换行符
    preventAttributesEscaping: false, // 🔥 允许属性转义优化
    quoteCharacter: '"',             // 统一引号风格
  },

  // Puppeteer 配置
  puppeteer: {
    headless: true,
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      '--disable-accelerated-2d-canvas',
      '--no-first-run',
      '--no-zygote',
      '--disable-gpu',
    ],
  },

  // 渲染等待配置
  render: {
    waitTime: 3000, // 等待React渲染完成
    networkIdleTime: 500, // 网络空闲时间
    viewportWidth: 1920, // 视口宽度
    viewportHeight: 1080, // 视口高度
    timeout: 30000, // 页面加载超时
  },
};

// Sitemap配置
export const SITEMAP_CONFIG = {
  // 文件路径
  files: {
    sitemap: 'sitemap.xml',
    robots: 'robots.txt',
  },

  // XML配置
  xml: {
    declaration: '<?xml version="1.0" encoding="UTF-8"?>',
    namespace: 'http://www.sitemaps.org/schemas/sitemap/0.9',
    schemaLocation: 'http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd',
  },

  // Robots.txt配置
  robots: {
    userAgent: '*',
    allow: '/',
    disallow: ['/admin/', '/private/'],
    crawlDelay: 1,
  },
};
